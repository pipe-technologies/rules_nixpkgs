load("@io_bazel_rules_go//go:def.bzl", "go_binary")
load("@rules_java//java:defs.bzl", "java_test")
load(":cc-test.bzl", "cc_toolchain_test")
load(":java-test.bzl", "java_runtime_test")

package(default_testonly = 1)

# Test nixpkgs_cc_configure() by building some CC code.
cc_binary(
    name = "cc-test",
    srcs = ["cc-test.cc"],
)

cc_binary(
    name = "c-test",
    srcs = ["c-test.c"],
)

# Test that nixpkgs_cc_configure is selected.
cc_toolchain_test(
    name = "cc-toolchain",
)

# Test nixpkgs_java_configure() by building some Java code.
java_test(
    name = "java-test",
    srcs = ["JavaTest.java"],
    test_class = "JavaTest",
)

# Test that nixpkgs_java_runtime is selected.
java_runtime_test(
    name = "java-runtime",
)

# Test nixpkgs_python_configure() by running some Python code.
test_suite(
    name = "python-test",
    tests = [
        "@nixpkgs_python_configure_test//:python2-test",
        "@nixpkgs_python_configure_test//:python3-test",
    ],
)

# Test nixpkgs_sh_posix_configure() checking that Unix commands are in Nix store.
sh_test(
    name = "run-test-posix-toolchain",
    timeout = "short",
    srcs = ["test_posix_toolchain.sh"],
    args = [
        "$(POSIX_AWK)",
        "$(POSIX_CAT)",
        "$(POSIX_GREP)",
        "$(POSIX_MAKE)",
    ],
    toolchains = ["@rules_sh//sh/posix:make_variables"],
)

# Test nixpkgs_go_configure()
go_binary(
    name = "go-test",
    srcs = ["go-test.go"],
)

sh_test(
    name = "run-test-invalid-nixpkgs-package",
    timeout = "short",
    srcs = ["test_invalid_nixpkgs_package.sh"],
    data = [
        "//nixpkgs:srcs",
        "//tests/invalid_nixpkgs_package:srcs",
        "@coreutils_static//:bin",
        "@nix-unstable//:bin",
        "@rules_nixpkgs_cc//:srcs",
        "@rules_nixpkgs_core//:srcs",
        "@rules_nixpkgs_java//:srcs",
        "@rules_nixpkgs_posix//:srcs",
        "@rules_nixpkgs_python//:srcs",
        "@rules_nixpkgs_rust//:srcs",
    ],
)
